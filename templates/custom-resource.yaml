AWSTemplateFormatVersion: '2010-09-09'
Description: ACFS3 - Cert Provider with DNS validation
Transform: AWS::Serverless-2016-10-31

Parameters:
  LayerBucket:
    Type: String
  LayerVersion:
    Type: String

Resources:
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CFNCustomProvider.Arn
      Principal: !GetAtt LambdaRole.Arn

  LambdaPolicy:
    Type: AWS::IAM::Policy
    DependsOn:
      - LambdaRole
    Properties:
      PolicyName: CFNCertificateDomainResourceRecordProvider
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - acm:RequestCertificate
              - acm:DescribeCertificate
              - acm:UpdateCertificateOptions
              - acm:DeleteCertificate
            Resource:
            - '*'
          - Effect: Allow
            Action:
              - logs:*
            Resource: arn:aws:logs:*:*:*
      Roles:
        - !Ref LambdaRole

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Tags:
        - Key: Solution
          Value: ACFS3

  CFNCustomProviderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub '/aws/lambda/${CFNCustomProvider}'
    DependsOn:
      - CFNCustomProvider

  CFNCustomProvider:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://binxio-public-us-east-1/lambdas/cfn-certificate-provider-0.2.4.zip
      Description: CFN Certificate Domain Resource Record Provider
      MemorySize: 128
      Handler: provider.handler
      Timeout: 300
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.6

  CopyBucket:
    DeletionPolicy: Retain
    Type: "AWS::S3::Bucket"
    Properties:
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html

  CopyLayerVersion:
    Type: "AWS::Lambda::LayerVersion"
    Properties:
      CompatibleRuntimes:
        - nodejs12.x
      Content:
        S3Bucket: !Ref LayerBucket
        S3Key: !Sub '${LayerVersion}/witch.zip'

  CopyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  CopyFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Code: ../www
      Environment:
        Variables:
          BUCKET: !Ref CopyBucket
      Handler: witch.staticHandler
      Layers:
        - !Ref CopyLayerVersion
      Role: !GetAtt CopyRole.Arn
      Runtime: nodejs12.x
      Timeout: 300

Outputs:
  CFNCustomProvider:
    Value: !GetAtt CFNCustomProvider.Arn

  CopyCustomResource:
    Value: !GetAtt CopyCustomResource.Arn

  CopyBucketWebsiteURL:
    Value: !GetAtt CopyBucket.WebsiteURL
